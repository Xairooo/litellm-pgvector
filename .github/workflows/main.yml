name: Build and publish Docker image

on:
  push:
    branches:
      - main
      - master
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
      - master

# Prevent overlapping runs per ref (branch or tag)
concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # Will be normalized to lowercase by docker/metadata-action

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # needed to push to GHCR
      # id-token: write # uncomment if you later add OIDC signing/provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Also log in to Docker Hub.
      # Provide DOCKERHUB_USERNAME and DOCKERHUB_TOKEN as repository secrets to enable.
      # - name: Log in to Docker Hub
      #   if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Primary image in GHCR (lowercased automatically)
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          # Optional: add Docker Hub target as well (uncomment if using Docker Hub login above)
          #   docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            # Tag with branch name
            type=ref,event=branch
            # Tag with git tag (e.g., v1.2.3 -> 1.2.3 and 1.2)
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # Short SHA tag for every commit
            type=sha,format=short
            # 'latest' on default branch
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile   # Adjust if your Dockerfile lives elsewhere
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false  # set true if you want SBOM/SLSA provenance

      # Optional: if you want to output the image digest
      - name: Export image digest
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Digest: ${{ steps.meta.outputs.digest }}"
